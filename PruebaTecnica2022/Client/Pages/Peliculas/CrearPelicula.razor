@page "/peliculas/crear"
@inject NavigationManager navigationManager
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensajes
@attribute [Authorize(Roles = "admin")]

<MudAppBar Color="Color.Primary" Fixed="false">
    <MudText Align="Align.Center" Typo="Typo.h4">Crear película</MudText>
</MudAppBar>

<FormularioPeliculas Pelicula="Pelicula" OnValidSubmit="Crear"/>

@code {
    private Pelicula Pelicula = new Pelicula();

    async Task Crear()
    {
        var httpResponse = await repositorio.Post("api/peliculas", Pelicula);
        if (httpResponse.Error)
        {
            var mensajeError = await httpResponse.GetBody();
            await mostrarMensajes.MostrarMensajeError(mensajeError);
        }
        else
        {
            navigationManager.NavigateTo("/peliculas");
        }
    }
    //private bool MostrarFormulario { get; set; } = false;
    //private Pelicula Pelicula = new Pelicula();
    //private List<Genero> GenerosNoSeleccionados = new List<Genero>();

    //protected async override Task OnInitializedAsync()
    //{
    //    var responseHttp = await repositorio.Get<List<Genero>>("api/generos");
    //    GenerosNoSeleccionados = responseHttp.Response;
    //    MostrarFormulario = true;
    //}

    //async Task Crear()
    //{
    //    var httpResponse = await repositorio.Post<Pelicula, int>("api/peliculas", Pelicula);

    //    if (httpResponse.Error)
    //    {
    //        var mensajeError = await httpResponse.GetBody();
    //        await mostrarMensajes.MostrarMensajeError(mensajeError);
    //    }
    //    else
    //    {
    //        var PeliculaId = httpResponse.Response;
    //        navigationManager.NavigateTo($"/pelicula/{PeliculaId}/{Pelicula.Titulo.Replace(" ", "-")}");
    //    }
    //}

}

