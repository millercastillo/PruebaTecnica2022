<EditForm Model="Pelicula" OnValidSubmit="OnDataAnnonationsValidated">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label>Título:</label>
            <div>
                <InputText class="form-control" @bind-Value="@Pelicula.Titulo" />
                <ValidationMessage For="@(() => Pelicula.Titulo)" />
            </div>
        </div>
        <div class="form-group">
            <label>Descripción:</label>
            <div>
                <InputText class="form-control" @bind-Value="@Pelicula.Descripcion" />
                <ValidationMessage For="@(() => Pelicula.Descripcion)" />
            </div>
        </div>
        <div class="form-group">
            <label>Fecha Lanzamiento:</label>
            <div>
                @*<MudDatePicker class="form-control" Label="Fecha Lanzamiento" @bind-Date="@Pelicula.Lanzamiento"/>*@
                <InputDate class="form-control" @bind-Value="@Pelicula.Lanzamiento" />
                <ValidationMessage For="@(() => Pelicula.Lanzamiento)" />
            </div>
        </div>
        <div class="form-group">
            <div>
                <MudNumericField HideSpinButtons="true" @bind-Value="@Pelicula.Precio" Label="Precio:" Variant="Variant.Outlined" />
                <ValidationMessage For="@(() => Pelicula.Precio)" />
            </div>
        </div>
       <div class="form-group">
            <InputImg Label="Foto" ImagenSeleccionada="ImagenSeleccionada" ImagenURL="@posterTemporal" />
        </div>

        <button type="submit" class="btn btn-success">Salvar Película</button>
    </EditForm>

@code {
    [Parameter] public Pelicula Pelicula { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    private string posterTemporal;

    
    //[Parameter] public List<Genero> GenerosSeleccionados { get; set; } = new List<Genero>();
    //[Parameter] public List<Genero> GenerosNoSeleccionados { get; set; } = new List<Genero>();
    //[Parameter] public List<Persona> ActoresSeleccionados { get; set; } = new List<Persona>();

    //private List<SelectorMultipleModel> Seleccionados { get; set; } = new List<SelectorMultipleModel>();
    //private List<SelectorMultipleModel> NoSeleccionados { get; set; } = new List<SelectorMultipleModel>();
    //private string posterTemporal;

    protected override void OnInitialized()
    {
        if (!string.IsNullOrWhiteSpace(Pelicula.Foto))
        {
            posterTemporal = Pelicula.Foto;
            Pelicula.Foto = null;
        }
    }

    private void ImagenSeleccionada(string imagenBase64)
    {
        Pelicula.Foto = imagenBase64;
    }

    private async Task OnDataAnnonationsValidated()
    {
        //Si en foto hay informacion se hace null es poster temporal
        if (!string.IsNullOrWhiteSpace(Pelicula.Foto)) { posterTemporal = null; }
        await OnValidSubmit.InvokeAsync(null);
    }
   

    //private async Task<IEnumerable<Persona>> BuscarActores(string searchText)
    //{
    //    return new List<Persona>()
    //    {
    //        new Persona(){Id=1, Nombre="Tom Holland", Foto = "https://m.media-amazon.com/images/M/MV5BNTAzMzA3NjQwOF5BMl5BanBnXkFtZTgwMDUzODQ5MTI@._V1_UY317_CR23,0,214,317_AL_.jpg"},
    //        new Persona(){Id=2, Nombre="Tom Hanks", Foto = "https://m.media-amazon.com/images/M/MV5BMTQ2MjMwNDA3Nl5BMl5BanBnXkFtZTcwMTA2NDY3NQ@@._V1_UY317_CR2,0,214,317_AL_.jpg"}
    //    };
    //}
}